apiVersion: apps/v1 # The API version that this configuration adheres to. "apps/v1" is commonly used for Deployments.

# "Deployment" indicates that we are declaring a Kubernetes Deployment.
# Deployments manage the desired state for your instances and updates them in a controlled way.
kind: Deployment

metadata:
  # The unique name for this Deployment within the Kubernetes namespace.
  # It's how we'll identify this Deployment resource.
  name: mongodb-deployment

spec: # The specification of the desired behavior of the Deployment.
  # "replicas" denotes the number of desired pod replicas.
  # MongoDB is set to have only 1 replica in this instance.
  replicas: 1

  # The "selector" field is how the Deployment identifies which Pods to manage.
  # In this case, it will manage Pods with the label "app" that have the value "mongodb".
  selector:
    matchLabels:
      app: mongodb

  # The "template" field is used to define the pod's characteristics.
  template:
    metadata:
      # Labels for the pod.
      # These labels are essential for the selector to match the pods that this Deployment manages.
      labels:
        app: mongodb

    spec: # The specification of the pod.
      containers:
        # This part defines the container(s) to run in the pod.
        # For this Deployment, there's only one container running MongoDB.
        - name: mongodb # A name for the container.
          image: mongo:latest # The Docker image to run in the container.
          ports:
            # This maps the container's port to the pod's port.
            # 27017 is the default port MongoDB listens on.
            - containerPort: 27017

          # "volumeMounts" allows the container to access the specified volume.
          # In this case, it allows MongoDB to access persistent storage to save its data.
          volumeMounts:
            - name: mongodb-data # The name must match the volume name below.
              mountPath: /data/db # MongoDB's default directory for data storage.

      # The "volumes" field lists the available storage volumes for the pod.
      # These can be used by the container(s) if they mount the volume.
      volumes:
        - name: mongodb-data # Name of the volume.
          # The volume sources from a PersistentVolumeClaim named "mongodb-pvc".
          # This claim must be defined elsewhere in the Kubernetes cluster.
          persistentVolumeClaim:
            claimName: mongodb-pvc
